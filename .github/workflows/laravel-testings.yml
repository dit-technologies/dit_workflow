name: Laravel Testing Workflow

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true
      SONAR_PROJECT_KEY:
        required: true
    inputs:
      php_version:
        required: true
        type: string
        description: "PHP version to use"
      isNodeEnabled:
        required: false
        type: boolean
        default: false
        description: "Whether to enable Node.js steps"
      node_version:
        required: false
        type: string
        description: "Node.js version to use if Node.js steps are enabled"
      

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      - name: Cache Node Modules
        if: ${{ inputs.isNodeEnabled }}
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            node-

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing.example', '.env');"

      - name: Run Composer Install
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader --ignore-platform-req=ext-gd

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v39
      
      - name: Install Node.js
        if: ${{ inputs.isNodeEnabled }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node_version }}

      - name: Install NPM Dependencies
        if: ${{ inputs.isNodeEnabled }}
        run: |
          npm install

      - name: Run NPM Build
        if: ${{ inputs.isNodeEnabled }}
        run: |
          npm run build
          
      - name: Run Pint
        run: |
          ./vendor/bin/pint --test ${{ steps.changed-files.outputs.all_changed_files }}

      - name: Generate Test Coverage Report
        run: |
          mkdir -p build/logs
          ./vendor/bin/phpunit --coverage-clover=build/logs/coverage.xml || true

      - name: Cache SonarQube dependencies
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache
          restore-keys: ${{ runner.os }}-sonar-cache


      # Triggering SonarQube analysis as results of it are required by Quality Gate check.
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=dit-technologies
            -Dsonar.sources=.
            -Dsonar.exclusions=vendor/**,node_modules/**,laradock/**
            -Dsonar.tests=tests
            -Dsonar.test.inclusions=tests/**/*
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.language=php,javascript
            -Dsonar.php.coverage.reportPaths=build/logs/coverage.xml
            -Dsonar.coverage.exclusions=**/*.*

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Display SonarQube Quality Gate Status
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
